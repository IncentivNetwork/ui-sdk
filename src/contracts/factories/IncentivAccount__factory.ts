/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  IncentivAccount,
  IncentivAccountInterface,
} from "../IncentivAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32[2]",
        name: "publicKey",
        type: "bytes32[2]",
      },
    ],
    name: "IncentivAccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "anOwner",
        type: "address",
      },
      {
        internalType: "bytes32[2]",
        name: "aPublicKey",
        type: "bytes32[2]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "message",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "x",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "y",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoveryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardDistribution",
    outputs: [
      {
        internalType: "contract IRewardDistribution",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRecoveryAddress",
        type: "address",
      },
    ],
    name: "setRecoveryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRecoveryAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "setRecoveryAddressWithPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transferGate",
    outputs: [
      {
        internalType: "contract ITransferGate",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c03462000159576001600160401b0390601f6200355538819003918201601f1916830191848311848410176200015e578084926020946040528339810103126200015957516001600160a01b038116810362000159573060805260a0527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff8260401c166200014757808083160362000101575b6040516133e09081620001758239608051818181610b160152610d14015260a05181818161050c01528181610819015281816108f8015281816110dd015281816112ea015281816113c2015281816115d6015281816117a201528181611a9f0152612eac0152f35b6001600160401b031990911681179091556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a138808062000099565b60405163f92ee8a960e01b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806301ffc9a71461019b578063101114cf14610196578063150b7a02146101915780631626ba7e1461018c57806319822f7c1461018757806347e1da2a1461018257806349efe5ae1461017d5780634a58db19146101785780634d44560d146101735780634f1ef2861461016e57806352d1902d14610169578063625512f31461016457806363ffab311461015f578063710eb26c1461015a5780638da5cb5b14610155578063ad3cb1cc14610150578063b0d691fe1461014b578063b497534314610146578063b61d27f614610141578063bc197c811461013c578063c399ec8814610137578063d087d28814610132578063d7f4f0c31461012d5763f23a6e610361000e576114a7565b611426565b611343565b611272565b6111ab565b61113a565b611101565b611092565b610fc1565b610f6f565b610f1d565b610eda565b610d8e565b610cce565b610a96565b61089a565b6107d7565b610750565b610613565b6104a5565b6103cf565b61033e565b61029b565b3461028b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361028b57807f150b7a020000000000000000000000000000000000000000000000000000000060209214908115610261575b8115610237575b506040519015158152f35b7f01ffc9a7000000000000000000000000000000000000000000000000000000009150143861022c565b7f4e2312e00000000000000000000000000000000000000000000000000000000081149150610225565b600080fd5b600091031261028b57565b3461028b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b5760206102d461158b565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b73ffffffffffffffffffffffffffffffffffffffff81160361028b57565b9181601f8401121561028b5782359167ffffffffffffffff831161028b576020838186019501011161028b57565b3461028b5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b576103786004356102f2565b6103836024356102f2565b60643567ffffffffffffffff811161028b576103a3903690600401610310565b505060206040517f150b7a02000000000000000000000000000000000000000000000000000000008152f35b3461028b5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b5760243567ffffffffffffffff811161028b5761042161042a913690600401610310565b90600435611879565b1561047d5760207f1626ba7e000000000000000000000000000000000000000000000000000000005b7fffffffff0000000000000000000000000000000000000000000000000000000060405191168152f35b60207fffffffff00000000000000000000000000000000000000000000000000000000610453565b3461028b577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60608136011261028b576004359067ffffffffffffffff821161028b5761012090823603011261028b5773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016330361058457610547816101046105509301906004016116eb565b90602435611879565b1561057a5761057660005b610566604435611a4a565b6040519081529081906020820190565b0390f35b610576600161055b565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152fd5b9181601f8401121561028b5782359167ffffffffffffffff831161028b576020808501948460051b01011161028b57565b3461028b5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b5767ffffffffffffffff60043581811161028b576106639036906004016105e2565b9160243581811161028b5761067c9036906004016105e2565b9160443590811161028b576106959036906004016105e2565b9290916106a0611a87565b8386148061073f575b6106b290611638565b816106f557505060005b8481106106c557005b806106ef6106de6106d960019489896116cc565b6116e1565b6106e983878761173c565b91611de1565b016106bc565b9093929460005b81811061070557005b806107396107196106d9600194868a6116cc565b610724838a886116cc565b3590610731848c8a61173c565b9290916124da565b016106fc565b508115806106a957508184146106a9565b3461028b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b5773ffffffffffffffffffffffffffffffffffffffff6004356107a0816102f2565b6107a8612b44565b167fffffffffffffffffffffffff00000000000000000000000000000000000000006003541617600355600080f35b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126108975773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681813b1561089757602491604051928380927fb760faf900000000000000000000000000000000000000000000000000000000825230600483015234905af1801561089257610886575080f35b61088f906109a0565b80f35b61157f565b80fd5b3461028b57600060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610897576004356108d7816102f2565b6108df612b44565b8173ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001692833b1561096d576044908360405195869485937f205c287800000000000000000000000000000000000000000000000000000000855216600484015260243560248401525af1801561089257610886575080f35b8280fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff81116109b457604052565b610971565b6040810190811067ffffffffffffffff8211176109b457604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176109b457604052565b60405190610a23826109b9565b565b67ffffffffffffffff81116109b457601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b929192610a6b82610a25565b91610a7960405193846109d5565b82948184528183011161028b578281602093846000960137010152565b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b576004803590610ace826102f2565b60243567ffffffffffffffff811161028b573660238201121561028b57610afe9036906024818501359101610a5f565b73ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016803014908115610ca0575b50610c77579060208392610b53612b44565b604051938480927f52d1902d00000000000000000000000000000000000000000000000000000000825288165afa60009281610c46575b50610bde5750506040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90921690820190815281906020010390fd5b83837f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8403610c11576100198383612ff9565b6040517faa1d49a400000000000000000000000000000000000000000000000000000000815290810184815281906020010390fd5b610c6991935060203d602011610c70575b610c6181836109d5565b8101906117d7565b9138610b8a565b503d610c57565b826040517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141538610b41565b3461028b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b5773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610d645760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60046040517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b3461028b5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b57600435610dc9816102f2565b60243567ffffffffffffffff811161028b57610dec610e32913690600401610310565b9060405160208101907fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008660601b16825260148152610e2a816109b9565b519020611879565b15610e7c576100199073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff00000000000000000000000000000000000000006003541617600355565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152fd5b3461028b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b57604060015460025482519182526020820152f35b3461028b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b57602073ffffffffffffffffffffffffffffffffffffffff60035416604051908152f35b3461028b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b57602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b3461028b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b576040805190610ffe826109b9565b600582526020907f352e302e300000000000000000000000000000000000000000000000000000006020840152604051916020835283519182602085015260005b83811061107f57846040817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f88600085828601015201168101030190f35b858101830151858201830152820161103f565b3461028b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461028b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b5760206102d4611757565b3461028b5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b57600435611175816102f2565b6044359067ffffffffffffffff821161028b57611199610019923690600401610310565b916111a2611a87565b602435906124da565b3461028b5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b576111e56004356102f2565b6111f06024356102f2565b67ffffffffffffffff60443581811161028b576112119036906004016105e2565b505060643581811161028b5761122b9036906004016105e2565b505060843590811161028b57611245903690600401610310565b50506040517fbc197c81000000000000000000000000000000000000000000000000000000008152602090f35b3461028b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260208160248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa801561089257602091600091611326575b50604051908152f35b61133d9150823d8411610c7057610c6181836109d5565b3861131d565b3461028b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b576040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482015260208160448173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa80156108925761057691600091611407575b506040519081529081906020820190565b611420915060203d602011610c7057610c6181836109d5565b386113f6565b3461028b5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b57600435611461816102f2565b366043121561028b57604051611476816109b9565b809160643660641161028b576024935b818510611497576100198484612c22565b8435815260209485019401611486565b3461028b5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028b576114e16004356102f2565b6114ec6024356102f2565b60843567ffffffffffffffff811161028b5761150c903690600401610310565b505060206040517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b9081602091031261028b575161154d816102f2565b90565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6040513d6000823e3d90fd5b73ffffffffffffffffffffffffffffffffffffffff6040517fde981f1b00000000000000000000000000000000000000000000000000000000815260026004820152602081602481857f0000000000000000000000000000000000000000000000000000000000000000165afa9081156108925760009161160b57501690565b61162d915060203d602011611631575b61162581836109d5565b810190611538565b1690565b503d61161b565b1561163f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e67746873000000000000000000000000006044820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b91908110156116dc5760051b0190565b61169d565b3561154d816102f2565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561028b570180359067ffffffffffffffff821161028b5760200191813603831361028b57565b908210156116dc576117539160051b8101906116eb565b9091565b73ffffffffffffffffffffffffffffffffffffffff6040517fde981f1b00000000000000000000000000000000000000000000000000000000815260036004820152602081602481857f0000000000000000000000000000000000000000000000000000000000000000165afa9081156108925760009161160b57501690565b9081602091031261028b575190565b90156116dc5790565b909291928360031161028b57831161028b57600301917ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd0190565b9092809260609694835260208301370191602083015260408201520190565b3d15611874573d9061185a82610a25565b9161186860405193846109d5565b82523d6000602084013e565b606090565b90604183036119325761189190611897933691610a5f565b90612f91565b73ffffffffffffffffffffffffffffffffffffffff90816118cd60005473ffffffffffffffffffffffffffffffffffffffff1690565b16918215159283611926575b5082156118e557505090565b8091925061190860035473ffffffffffffffffffffffffffffffffffffffff1690565b1690811515928361191a575b50505090565b16149050388080611914565b828216149250386118d9565b61197b838061197561196f61194960ff98876117e6565b357fff000000000000000000000000000000000000000000000000000000000000001690565b60f81c90565b936117ef565b9390911680611994575061189190611897933691610a5f565b909190600103611a42576001549283158015611a38575b611a2f576119fc600094936119d086956002549060405195869460208601988961182a565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352826109d5565b51906101115afa611a0b611849565b81611a14575090565b6001915080602080611a2b935183010191016117d7565b1490565b50505050600090565b50600254156119ab565b505050600090565b80611a525750565b600080808093337ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff150611a84611849565b50565b73ffffffffffffffffffffffffffffffffffffffff807f0000000000000000000000000000000000000000000000000000000000000000163314908115611b57575b8115611b36575b5015611ad857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152fd5b9050600354168033149081611b4d575b5038611ad0565b9050151538611b46565b809150600054168033149081611b6f575b5090611ac9565b9050151538611b68565b9081608091031261028b57604051906080820182811067ffffffffffffffff8211176109b457604052805190600782101561028b5760609183526020810151611bc1816102f2565b6020840152604081015160408401520151611bdb816102f2565b606082015290565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b60609073ffffffffffffffffffffffffffffffffffffffff61154d9593168152600060208201528160408201520191611be3565b61154d949273ffffffffffffffffffffffffffffffffffffffff60609316825260208201528160408201520191611be3565b60071115611c9257565b611550565b9081602091031261028b5751801515810361028b5790565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91908203918211611ceb57565b611caf565b908160a091031261028b576040519060a082019082821067ffffffffffffffff8311176109b4576080916040528051835260208101516020840152604081015160408401526060810151611d43816102f2565b60608401520151611d53816102f2565b608082015290565b9493929160609273ffffffffffffffffffffffffffffffffffffffff611d969316875260006020880152608060408801526080870191611be3565b930152565b959493611d969273ffffffffffffffffffffffffffffffffffffffff606095931688526020880152608060408801526080870191611be3565b91908201809211611ceb57565b919091611e08611def611757565b73ffffffffffffffffffffffffffffffffffffffff1690565b9073ffffffffffffffffffffffffffffffffffffffff918281166121a0575b505a611e34848684612fa7565b5a90611e41611def61158b565b938416611e51575b505050505050565b60a091611e5d91611cde565b93604095611e98875196879384937f7da995530000000000000000000000000000000000000000000000000000000085528760048601611d5b565b0381855afa9283156108925760009361216f575b50825180151580612165575b6120ea575b5050602090818301918251611ed3575b80611e49565b60608401611efb611def611def835173ffffffffffffffffffffffffffffffffffffffff1690565b86517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529091908381602481865afa908115610892576000916120cd575b50611f5088880151875190611dd4565b1115611f5e575b5050611ecd565b845187517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff861660048201526024810191909152918390839060449082906000905af19081156108925761200793608093611feb9361209f575b50505173ffffffffffffffffffffffffffffffffffffffff1690565b94015173ffffffffffffffffffffffffffffffffffffffff1690565b915191813b1561028b5793517f725bb98e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290931660248301526044820152906000908290606490829084905af1801561089257612086575b808080808080611f57565b80612093612099926109a0565b80610290565b3861207b565b816120be92903d106120c6575b6120b681836109d5565b810190611c97565b503880611fcf565b503d6120ac565b6120e49150843d8611610c7057610c6181836109d5565b38611f40565b823b1561028b5784517ffbece13300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92909216600483015260009082906024908290865af1801561089257612152575b80611ebd565b8061209361215f926109a0565b3861214c565b5080471015611eb8565b61219291935060a03d60a011612199575b61218a81836109d5565b810190611cf0565b9138611eac565b503d612180565b9092916040948551937f85e6a6dc000000000000000000000000000000000000000000000000000000008552608085806121df84868b60048501611c22565b0381875afa948515610892576000956124a9575b506001855161220181611c88565b61220a81611c88565b0361239a5750506020830190612234825173ffffffffffffffffffffffffffffffffffffffff1690565b169081612308575b5173ffffffffffffffffffffffffffffffffffffffff1690505b61227b60608685015194015173ffffffffffffffffffffffffffffffffffffffff1690565b94823b1561028b57517fe0df155e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9485166004820152908416602482015260448101929092529190921660648301526000908290818381608481015b03925af18015610892576122fb5750565b80612093610a23926109a0565b8584015186517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602481019190915291602090839060449082906000905af1918215610892576122569261237b575b5061223c565b6123939060203d6020116120c6576120b681836109d5565b5038612375565b9492849294969196516123ac81611c88565b6123b581611c88565b6123c25750505038611e27565b929350935093506123ea602085015173ffffffffffffffffffffffffffffffffffffffff1690565b8385015192612410606087015173ffffffffffffffffffffffffffffffffffffffff1690565b95519061241c82611c88565b61242582611c88565b833b1561028b576122ea60009692879351988997889687957f3b2a878b00000000000000000000000000000000000000000000000000000000875260048701919095949360a09360c084019773ffffffffffffffffffffffffffffffffffffffff938480921686526000602087015216604085015260608401521660808201520152565b6124cc91955060803d6080116124d3575b6124c481836109d5565b810190611b79565b93386121f3565b503d6124ba565b9291926124e8611def611757565b9173ffffffffffffffffffffffffffffffffffffffff9283811661282d575b505a61251585878486612fd8565b5a90612522611def61158b565b948516612533575b50505050505050565b60a09161253f91611cde565b9460409661257b885197889384937f7da99553000000000000000000000000000000000000000000000000000000008552878960048701611d9b565b0381865afa9384156108925760009461280c575b5083519081151591826127f7575b5050612780575b506020908183019182516125ba575b808061252a565b606084016125e2611def611def835173ffffffffffffffffffffffffffffffffffffffff1690565b86517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529091908381602481865afa90811561089257600091612763575b5061263788880151875190611dd4565b1115612645575b50506125b3565b845187517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff861660048201526024810191909152918390839060449082906000905af1908115610892576126d193608093611feb9361209f5750505173ffffffffffffffffffffffffffffffffffffffff1690565b915191813b1561028b5793517f725bb98e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290931660248301526044820152906000908290606490829084905af1801561089257612750575b80808080808061263e565b8061209361275d926109a0565b38612745565b61277a9150843d8611610c7057610c6181836109d5565b38612627565b8251823b1561028b5784517ffbece13300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92909216600483015260009082906024908290865af1801561089257156125a457806120936127f1926109a0565b386125a4565b47925061280391611dd4565b1115388061259d565b61282691945060a03d60a0116121995761218a81836109d5565b923861258f565b919492836040956080848961286f848b519a8b9485947f85e6a6dc00000000000000000000000000000000000000000000000000000000865260048601611c56565b0381885afa95861561089257600096612b23575b506001865161289181611c88565b61289a81611c88565b03612a1557505060208401906128c4825173ffffffffffffffffffffffffffffffffffffffff1690565b169081612983575b5173ffffffffffffffffffffffffffffffffffffffff1690505b9061290c60608686015195015173ffffffffffffffffffffffffffffffffffffffff1690565b95833b1561028b576122ea60009651978896879586947fe0df155e000000000000000000000000000000000000000000000000000000008652600486019293606092919594608085019673ffffffffffffffffffffffffffffffffffffffff93848092168752166020860152604085015216910152565b8585015186517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86166004820152602481019190915291602090839060449082906000905af1918215610892576128e6926129f6575b506128cc565b612a0e9060203d6020116120c6576120b681836109d5565b50386129f0565b9591949096938151612a2681611c88565b612a2f81611c88565b612a3c5750505038612507565b93965093509350612a64602084015173ffffffffffffffffffffffffffffffffffffffff1690565b928481015195612a8b606083015173ffffffffffffffffffffffffffffffffffffffff1690565b915195612a9787611c88565b612aa087611c88565b843b1561028b5760009687936122ea9251998a98899788967f3b2a878b0000000000000000000000000000000000000000000000000000000088526004880192969594909360a09460c085019873ffffffffffffffffffffffffffffffffffffffff94858093168752602087015216604085015260608401521660808201520152565b612b3d91965060803d6080116124d3576124c481836109d5565b9438612883565b3033148015612bee575b8015612bba575b15612b5c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152fd5b5073ffffffffffffffffffffffffffffffffffffffff600354168033149081612be4575b50612b55565b9050151538612bde565b5073ffffffffffffffffffffffffffffffffffffffff600054168033149081612c18575b50612b4e565b9050151538612c12565b907ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549260ff8460401c16159367ffffffffffffffff811680159081612dcc575b6001149081612dc2575b159081612db9575b50612d8f57612cb29360017fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000879316179055612d3357612dd4565b612cb857565b612d047ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a007fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff8154169055565b604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1565b612d8a7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00680100000000000000007fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff825416179055565b612dd4565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b90501538612c77565b303b159150612c6f565b869150612c65565b9073ffffffffffffffffffffffffffffffffffffffff918281161515825115801590612f84575b15158114612f005715612ed857612e4e915073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff00000000000000000000000000000000000000006000541617600055565b60005473ffffffffffffffffffffffffffffffffffffffff167fb5a27d2c60e6b6da752054a458f47cb98864177b9bbb9e92d02484eaa3a9676782612e91610a16565b9260015484526002546020850152612ed360405192839216957f0000000000000000000000000000000000000000000000000000000000000000169482613110565b0390a3565b506020815191015190816020604051612ef0816109b9565b8381520152600155600255612e4e565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4d7573742070726f766964652065697468657220616e206f776e6572206f722060448201527f61207075626c6963206b657900000000000000000000000000000000000000006064820152fd5b5060208301511515612dfb565b61154d91612f9e9161313e565b90929192613184565b600092838093826040519384928337810182815203925af1612fc7611849565b9015612fd05750565b602081519101fd5b90926000938493826040519384928337810185815203925af1612fc7611849565b90813b156130c95773ffffffffffffffffffffffffffffffffffffffff82167f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511561309657611a849161325b565b50503461309f57565b60046040517fb398979f000000000000000000000000000000000000000000000000000000008152fd5b60248273ffffffffffffffffffffffffffffffffffffffff604051917f4c9c8ce3000000000000000000000000000000000000000000000000000000008352166004820152fd5b6040810192916000915b6002831061312757505050565b60019082518152602080910192019201919061311a565b815191906041830361316f5761316892506020820151906060604084015193015160001a90613279565b9192909190565b505060009160029190565b60041115611c9257565b61318d8161317a565b80613196575050565b61319f8161317a565b600181036131d15760046040517ff645eedf000000000000000000000000000000000000000000000000000000008152fd5b6131da8161317a565b60028103613214576040517ffce698f700000000000000000000000000000000000000000000000000000000815260048101839052602490fd5b8061322060039261317a565b146132285750565b6040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004810191909152602490fd5b60008061154d93602081519101845af4613273611849565b9161330a565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116132fe57926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa1561089257805173ffffffffffffffffffffffffffffffffffffffff8116156132f557918190565b50809160019190565b50505060009160039190565b90613349575080511561331f57805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b815115806133a1575b61335a575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b1561335256fea264697066735822122072cf8ebaddd93b14decd7ff2b190a9872b4e6dddd826410f7713b12c75e8d09f64736f6c63430008170033";

type IncentivAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncentivAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IncentivAccount__factory extends ContractFactory {
  constructor(...args: IncentivAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IncentivAccount> {
    return super.deploy(
      anEntryPoint,
      overrides || {}
    ) as Promise<IncentivAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(anEntryPoint, overrides || {});
  }
  override attach(address: string): IncentivAccount {
    return super.attach(address) as IncentivAccount;
  }
  override connect(signer: Signer): IncentivAccount__factory {
    return super.connect(signer) as IncentivAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncentivAccountInterface {
    return new utils.Interface(_abi) as IncentivAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IncentivAccount {
    return new Contract(address, _abi, signerOrProvider) as IncentivAccount;
  }
}
